---
# Front matter comment to ensure Jekyll properly reads file.
---

html {
  box-sizing: border-box;
  font-size: 18px; /* fallback font size: should be large enough for mobile screens */
  font-size: min(max(16px, 3vw), 24px); /* responsive font size */
  scroll-behavior: smooth;

  --outerMargin: 20px;
  --mainGap: calc(1.5rem + 5vh); /* margin between main and nav-banner or footer */
  --smBreak: calc((var(--mainGap) / 3) + 1rem); /* a small break */
  --headFootText: 18px; /* text size for head and footer elements */
  --lineHeight: 1.5;
  --maxText: 66ch; /* max text line width */
  --textScale: 1.414; /* scale text at powers of 1.414 */
  --paddText: 20px; /* padding for text in cards */

  --whiteMd: hsla(0, 0%, 100%, .87); /* var for high emph text in white */

  /* set default color variables for dark theme */
  --textHighEmph: var(--whiteMd); /* Material dark theme high emphasis text */
  --textMedEmph: hsla(0, 0%, 100%, .6); /* Material dark theme medium emphasis text */
  --mainBg: #1C2124; /* main background-color (#121212 w. 8% primary color #90CAF9 overlay) */
  --oneDpBg: #272C2F; /* background-color at 1dp (w. 5% white overlay) */
  --fourDpBg: #303538; /* background-color at 4dp (w. 9% white overlay) */
  --eightDpBg: #373C3E; /* background-color at 8dp (w. 12% white overlay) */
  --altBg: #272C30; /* background for footer and some other elements */
  --anchorNorm: #90caf9; /* primary color dark */
  --anchorFocus: #b39ddb;
  --anchorHover: #d1c4e9;
  --anchorVisited: #ce93d8;
}

@media (prefers-color-scheme: light) { /* set color variables for light theme */
  html {
    --textHighEmph: hsla(0, 0%, 0%, .87);
    --textMedEmph: hsla(0, 0%, 0%, .6);
    --mainBg: #F0F1F2; /* desaturated primary color light */
    --oneDpBg: #F2F4F2;
    --fourDpBg: #F5F6F5;
    --eightDpBg: #fbfbfb;
    --altBg: #121212; /* Material dark theme primary color for higher contrast with links and text */
    --anchorNorm: #2196F3; /* primary color light */
  }
}

@media screen and (min-width: 501px) { /* increase outerMargin for screens over 500px width */
  html {
    --outerMargin: 40px;
  }
}

@media screen and (min-width: 850px) {
  html {
    --mainGap: calc(1.5rem + 15vh); /* increase spacing for larger screens */
  }
}

*, *:before, *:after {
  box-sizing: inherit;
}

@media (prefers-reduced-motion: reduce) { /* remove all animations and transitions for people who prefer not to see them */
  * {
    animation-play-state: paused;
    transition: none;
    scroll-behavior: auto;
  }
}

html, body {
  height: 100%;
}

body {
  background-color: var(--mainBg); /* background changes (dark or light) based on UA pref */
  color: var(--textHighEmph);
  font-family: 'Noto Sans', 'Roboto', sans-serif;
  line-height: var(--lineHeight);
  margin: 0;
  padding: 0;
}

.speechOnly {
  display: none;
}

@media speech {
  .speechOnly {
    display: block;
  }
}

.navbar {
  display: grid;
  grid-auto-flow: row;
  grid-template-columns: auto auto;
  justify-content: space-between;
  align-items: start;
  margin: var(--outerMargin);
}

a { /* set links to primary color for light or dark mode  */
  color: var(--anchorNorm);
  text-decoration: none;
}

@media not (prefers-color-scheme: light) { /* set link pseudo-class colors in dark theme; otherwise colors are set by user agent */
  a {
    font-weight: 700;
  }

  a:hover, a:active {
    color: var(--anchorHover);
  }

  a:focus {
    color: var(--anchorFocus);
  }

  a:visited {
    color: var(--anchorVisited);
  }
}

.brand {
  align-items: start;
}

.logo {
  height: calc((var(--outerMargin) * 2) + 1.5vw);
}

.preferLight { /* light theme is off by default */
  display: none;
}

@media (prefers-color-scheme: light) { /* toggles between items intended for light and dark themes */
  .preferDark {
    display: none;
  }

  .preferLight {
    display: block;
  }
}

.horizontalUl {
  display: flex;
  flex-wrap: wrap; /* fallback in case there's a problem putting the links in a column in the media query below */
  list-style-type: none;
  overflow: hidden;
}


/* places nav links in a right justified column so they fit on screen */
@media screen and (max-width: 640px) {
  .navUl {
    align-items: flex-end;
    flex-direction: column;
    justify-content: flex-start;
  }

  .navUl:nth-child(n+2) {
    line-height: calc(1.3 * var(--lineHeight));
  }
}

/* hides header and footer navigation lists in print */
@media print {
  .navUl {
    display: none;
  }

  .footUl {
    display: none;
  }
}

.navText {
  color: var(--anchorNorm);
  font-size: var(--headFootText);
}

/* Place nav text close to being aligned to top margin and logo's top */
@media and screen (min-width: 751px) {
  .navText, .navUl {
    margin-top: 0;
    padding-top: 0;
  }
}

.spaceToLeft {
  margin-left: calc(1rem + 2vw);
}

.main {
  margin-top: var(--mainGap);
  margin-bottom: var(--mainGap);
}

@media screen and (min-width: 700px) {
  .sideMargin {
    margin-left: var(--outerMargin);
    margin-right: var(--outerMargin);
  }
}

.intro {
  margin: var(--mainGap) 0 var(--mainGap) 0;
  padding-bottom: var(--mainGap);

  /* background image */
  background-color: transparent;
  background-image: url(/images/seattleSkylineSm.png);
  background-position: bottom left;
  background-size: initial;
  background-repeat: no-repeat;
}

.introContainer {
  display: grid;
  grid-auto-flow: row;
  grid-gap: 1vmin;
  justify-content: center;
}

.introHead {
  margin: 0 var(--outerMargin) 0.5rem var(--outerMargin);
}

.display {
  font-family: 'Lora', 'Caslon', 'Libre Caslon Text', serif;
  font-size: calc(1rem * var(--textScale) * var(--textScale) * var(--textScale) * var(--textScale));
  line-height: 1;
}

.introText {
  font-size: calc(1rem * var(--textScale));
  max-width: 40ch;
  margin: 0 var(--outerMargin) 0 var(--outerMargin); /* sets right margin so text is never flush with window edge */
}

p {
  max-width: 68ch;
}

p + ul, p + ol { /* removes margin between paragraphs and lists, there's probably a better way to set this all up */
  margin-top: -.5rem;
  margin-bottom: 0rem;
}

/* .showcase {
  display: flex;
  flex-direction: column;
  justify-content: center;
} */

.studies {
  display: grid;
  align-items: start;
  grid-template-columns: auto;
  grid-template-rows: auto;
  overflow: visible;
  grid-template-areas:
    "proj04"
    "proj03"
    /* "proj02" */
    "proj01"
    "writ"
    "illust"
    "fun";
}

@media screen and (max-width: 799px) {
  .studies {
    grid-row-gap: 8vh;
  }
}

@media screen and (min-width: 800px) {
   .studies {
     background-image: url(/images/pattern.svg);
     background-position: center top;
     background-size: contain;
     background-repeat: repeat-y;
     padding-bottom: calc(var(--mainGap) * 2);
     margin-bottom: calc(0px - var(--mainGap));
     gap: 1rem;
     grid-gap: 1rem; /* fallback for gap */
     grid-template-columns: repeat(3, 1fr);
     grid-template-areas:
      "proj04 . ."
      "proj04 . illust"
      ". . illust"
      ". writ ."
      "proj03 . ."
      "proj03 fun ."
      ". fun ."
      ". . proj01"
      ". . proj01";
   }
}

.card {
  background-color: var(--oneDpBg);
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20);
  max-width: 100vw;
  transition: all 0.3s cubic-bezier(.25,.8,.25,1);
}

.card:hover, .card:focus {
  background-color: var(--fourDpBg);
  box-shadow: 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.20);
}

.card:active {
  background-color: var(--eightDpBg);
  box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.20);
}

.dispBlock {
  display: block;
}

.paddingSmB {
  padding-bottom: var(--paddText);
}

.project01 {
    grid-area: proj01;
}

.padText {
  padding-left: var(--paddText);
  padding-right: var(--paddText);
}

.projPic {
  max-width: 100%;
  object-fit: contain;
}

.project02 {
  grid-area: proj02;
}

.project03 {
  grid-area: proj03;
}

.project04 {
  grid-area: proj04;
}

.illustration { /* should be larger than project 02 and 03, but smaller than 01 */
  background-image: url(/images/florenceOregonCrop.jpg); /* if replacing, choose a light image or adjust a.darklink below */
  background-position: bottom left;
  background-size: cover;
  background-repeat: no-repeat;
  grid-area: illust;
  max-width: 800px; /* width of selected image */
  max-height: 60vh;
  min-height: 300px; /* what looks good for selected image */
}

.fun {
  grid-area: fun;
  background-image: url(/images/qwho.jpg); /* if replacing, choose a light image or adjust a.darklink below */
  background-position: bottom left;
  background-size: cover;
  background-repeat: no-repeat;
  max-width: 800px; /* expand up to larger breakpoints */
  max-height: 60vh;
  min-height: 200px; /* what looks good for selected image */
}

.bgCover { /* set a background color overlay for cards with an image */
  background-color: hsla(203, 9%, 17%, 0.25); /* oneDpBg in hsl with transparency */
  width: 100%;
  height: 100%;
}

.bgCover:hover, .bgCover:focus, .bgCover:active { /* overlay transparent when pressed, hovered, etc */
  background-color: hsla(203, 9%, 17%, 0);
}

.imageLink {
  display: block;
  height: 100%;
  width: 100%;
}

.writeVert {
  writing-mode: vertical-lr;
  -webkit-writing-mode: vertical-lr;
  -ms-writing-mode: vertical-lr;
}

a.darkLink {
  color: hsla(0, 100%, 0%, 0.9);
}

.writing {
  grid-area: writ;
}

/* for footer */
.foot {
  background-color: var(--altBg);
  box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.20); /* 8dp in Material Design */
  margin: var(--mainGap) 0 0 0;
  width: 100%;
  padding-top: var(--outerMargin);
  padding-bottom: 5rem;
}

.footUl {
  justify-content: space-between;
  flex-wrap: wrap;
  font-size: var(--headFootText);
}

@media screen and (max-width: 750px) {
  .footUl {
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
  }

  .footText {
    line-height: calc(1.3 * var(--lineHeight));
  }
}

.footText {
  margin-left: var(--outerMargin);
  margin-right: var(--outerMargin);
  margin-bottom: 0;
}

.copywrite {
  font-size: calc(var(--headFootText) * 0.8);
}

@media (prefers-color-scheme: light) { /* sets color to dark theme high emphasis for text always on dark backgrounds, like in the footer */
  .switchColor {
    color: hsla(0, 0%, 100%, .87); /* white, high emphasis dark theme text */
  }
}

/* for illustration page */
.illustContainer {
  display: grid;
  grid-auto-flow: dense;
  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
  grid-column-gap: calc(1rem + 5vw);
  grid-row-gap: calc(3rem + 15vh);
  align-items: center;
  justify-content: center;
  margin: 0;
}

@media screen and (min-width:800px) {
  .illustContainer {
    margin-left: var(--outerMargin);
    margin-right: var(--outerMargin);
  }
}

.illustCard {
  display: flex;
  flex-flow: column;
  max-width: 100%;
  height: auto;
  align-items: center;
}

.illustImg {
  max-width: 100%;
  max-height: 92vh;
  height: auto;
  object-fit: scale-down;
  margin-bottom: .3rem;
}

.caption {
  margin: 0;
  font-size: .75rem;
}

.illustComic {
  display: grid;
  grid-template-columns: auto auto auto auto;
  grid-column-gap: 0;
}

@media screen and (min-width: 875px) {
  .illustCardLong {
    grid-column-start: auto;
    grid-column-end: span 2;
  }
}

/* for projects  */
.projContainer {
  display: grid;
  justify-content: center;
}

.projLimitWidth {
  margin-left: var(--outerMargin);
  margin-right: var(--outerMargin);
  max-width: var(--maxText);
}

.centerImg {
  height: auto;
  justify-self: center;
  max-width: 100%;
}

.lgBreak {
  margin-top: calc(var(--mainGap) + 2rem);
}

@media and screen (min-width: 850px) {
  .lgBreak {
    margin-top: var(--mainGap);
  }
}

.medBreak {
  margin-top: calc((var(--smBreak) * 1.5) + 1rem);
}

.speechOrPrintOnly {
  display: none;
}

@media print, speech { /* displays speechOrPrintOnly items, hides screenOnly items */
  .speechOrPrintOnly { /* for alternate text of items wrapped in inaccessibe elements  */
    display: block;
  }

  .screenOnly { /* for elements which are not accessible in print or speech, like `<details>` */
    display: none;
  }
}

.accordion {
  padding: 1rem;
  width: 100%;
  border: none;
  outline: none;
  transition: 0.4s;
}

.accordBottomBorder {
  border-bottom: 2px solid hsla(0, 0%, 0%, .2);
}

.panel {
  padding: 0 1rem;
  background-color: var(--mainBg);
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-out;
}

.smBreak {
  margin-top: var(--smBreak);
}

.smallerBreak {
  margin-top: 2rem;
}

.smallestBreak {
  margin-top: 1rem;
}

.centerGrid {
  display: grid;
  justify-content: center;
}

.respImgGrid {
  display: grid;
  grid-gap: 2rem;
}

.grid3Col {
  grid-template-columns: 1fr 1fr 1fr;
}

.grid2Col {
  grid-template-columns: 1fr 1fr;
}

button {
    display: inline-block;
    border: none;
    padding: 1rem 2rem;
    margin: 0;
    text-decoration: none;
    background: #ffe082;
    color: hsla(0, 100%, 0%, 0.9);
    font-family: 'Noto Sans', 'Roboto', sans-serif;
    font-size: 1rem;
    cursor: pointer;
    text-align: center;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    transition: background 250ms ease-in-out,
                transform 150ms ease;
    -webkit-appearance: none;
    -moz-appearance: none;
}

button:hover, button:focus, button:active, .active {
    background: #ffcc33;
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}

button:focus {
    outline: 1px solid #fff;
    outline-offset: -4px;
}

button:active {
    transform: scale(0.99);
}

h4 {
  font-weight: bold;
}

.headerWithP {
  margin-bottom: 0;
  line-height: 0.25;
}

@media screen and (min-width:640px) { /* places photo to left and card (or similar) at right for larger screens */
  .personaCard {
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
  }

  .conditionalFlexRow { /* places contained items in a row */
    display: flex;
    flex-direction: row;
  }

  .conditional1Dp {
    background-color: var(--oneDpBg);
  }

  .conditionalFlexCol { /* sets up a column next to smallPic */
    display: flex;
    flex-direction: column;
  }

  .conditionalMarg { /* sets margins for text within box */
    margin: var(--outerMargin);
  }
}

.displayFirst { /* sets pic to display before text */
  order: -1;
}

.smallPic { /* actual width of chosen pics */
  max-width: 250px;
}

@media screen and (min-width:640px) { /* resize smallPic and set margin to its right for larger screens */
  .smallPic { /* leaves room for item to right */
    height: 100%;
    max-width: 150px;
    object-fit: cover;
  }

  .conditionalRightMarg {
    margin-right: var(--outerMargin);
  }

  .conditionalLeftMarg { /* left margin option */
    margin-left: var(--outerMargin);
  }
}

.fitContain {
  object-fit: contain;
}

.smallLeading  {
  margin-bottom: 0;
  line-height: .75;
}

figcaption, .medEmphTxt {
  font-size: .8rem;
  color: var(--textMedEmph);
}

.zeroMargin {
  margin: 0;
}

.captionedImg {
  max-width: 100%;
  height: auto;
  object-fit: scale-down;
  margin-bottom: .3rem;
}

.minWidthVW {
  min-width: 20vw;
}

.flexy {
  display: flex;
}
.flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flexCol {
  flex-direction: column;
}

.logoInLock {
  max-height: 5rem;
  min-width: 60px;
  object-fit; scale-down;
}

.lockupBreakVert {
  margin-top: .5rem;
}

/* for about */
.aboutContainer {
  margin-left: var(--outerMargin);
  margin-right: var(--outerMargin);
}

.gridCenter {
  display: grid;
  justify-content: center;
}

@media screen and (min-width: 80ch) {
  .gridTextPicCol {
    grid-template-columns: minmax(44ch, 66ch) minmax(10px, 600px);
    grid-column-gap: var(--outerMargin);
  }
}

.aboutText {
  margin: 0 0 1rem 0;
  max-width: var(--maxText);
}

.lessLeading {
  line-height: .5;
}

.leadingSm {
  line-height: 0.75;
}

.leadingOne {
  line-height: 1;
}

.selfPortrait {
  height: auto;
  max-width: 100%;
  object-fit: contain;
  place-self: start end;
}

.flexBaseline {
  align-items: baseline;
}

.flexRow {
  display: flex;
  flex-direction: row;
}

.flexWrap {
  flex-wrap: wrap;
}

.flexAlignEnd {
  align-self: flex-end;
}

.listStyleNone {
  list-style: none;
  padding: 0;
}

.margBottMed {
  margin-bottom: var(--smBreak);
}

.medImgHeight {
  max-height: 40vh;
}

/* for resume */

.gridSelfJustCenter {
  justify-self: center;
}

.margBottZero {
  margin-bottom: 0;
}

.underlineBlock { /* underlines text across full width of block */
  border-bottom: 2px solid #90caf9;
  display: inline-block;
  line-height: 0.85;
  width: 100%;
  overflow: hidden;
}

.marginTopZero {
  margin-top: 0;
}

.embold {
  font-weight: bold;
}

.txtScale3 {
  font-size: calc(1rem * var(--textScale) * var(--textScale) * var(--textScale));
}

.txtScale1 {
  font-size: calc(1rem * var(--textScale));
}

/* makes iframes responsive by contraining them with a parent element per CSS Tricks */
[style*="--aspect-ratio"] > :first-child {
  width: 100%;
}
[style*="--aspect-ratio"] > img {
  height: auto;
}
@supports (--custom:property) {
  [style*="--aspect-ratio"] {
    position: relative;
  }
  [style*="--aspect-ratio"]::before {
    content: "";
    display: block;
    padding-bottom: calc(100% / (var(--aspect-ratio))); /* var value is set in inline style as a fraction */
  }
  [style*="--aspect-ratio"] > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }
}

.iframeCont {
  position: relative;
  overflow: hidden;
  width: 100%;
  padding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */
}

/* iframe fits in container section with full height and width */
.respIframe {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

/* for random */
.contMaxwidth {
  max-width: 80ch;
}

.margBottSm {
  margin-bottom: 0.5rem;
}

.photoMedResp {
  max-width: 100%;
  max-height: 90vh;
  height: auto;
  object-fit: contain;
}

.respTxtThirty {
  font-size: 1.1rem; /* fallback font size */
  font-size: min(max(1.1rem, 3vw), 32px); /* responsive font size */
}

.photoLGResp {
  max-width: 100%;
  height: auto;
  object-fit: scale-down;
}

.flexAlignItemsEnd {
  align-items: flex-end;
}

.dispInline {
  display: inline;
}

.leadingOne {
  line-height: 1;
}

.grid {
  display: grid;
}

.gridGapOne {
  gap: 1rem; /* sets gap for columns, flex, grid */
  grid-gap: 1rem; /* grid fallback */
}

/* conditional grid rules */
@media screen and (min-width: 640px) {
  .condGridRow {
    grid-auto-flow: row;
  }

  .condGridTwoOne {
    grid-template-columns: 2fr 1fr;
  }

  .condGridOneTwo {
    grid-template-columns: 1fr 2fr;
  }
}

.paddingSm {
  padding: .5rem;
}
